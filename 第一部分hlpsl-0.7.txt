role pm1 (AR1,AC1,PM1:agent, 
  HH:hash_func,HK:hash_func,
  SND,RCV:channel(dy))
played_by PM1
def=
local  
 Rar1pm1,Sar1pm1,Rac1pm1,Sac1pm1:text,  
 Rpm1ar1,Rpm1ac1:text,  
 Hpm1ar1,Hpm1ac1:text, 
 Uar1,Iar1,Uac1,Iac1:text, 
 RUar1,RIar1,RUac1,RIac1:text, 
 Kpm1ar1,Kpm1ac1:symmetric_key,  
 PKpm1:public_key,
 State:nat  
const 
 pm1_ar1_hpm1ar1,pm1_ac1_hpm1ac1,
 pm1_ar1_rpm1ar1,pm1_ac1_rpm1ac1
 :protocol_id
init  
 State := 3  
transition  
3. State=3/\RCV(AR1.Rar1pm1'.AC1.Rac1pm1')
 =|>State':=6
 /\Rpm1ar1':=new()/\Rpm1ac1':=new()
 /\PKpm1':=new()
 /\SND(AR1.Rpm1ar1'.AC1.Rpm1ac1'.PKpm1') 
6. State=6/\RCV({AR1.Sar1pm1'}_PKpm1.{AC1.Sac1pm1'}_PKpm1) 
 =|>State':= 9
 /\Hpm1ar1':=HH(Rar1pm1.Rpm1ar1.Sar1pm1')
 /\Hpm1ac1':=HH(Rac1pm1.Rpm1ac1.Sac1pm1')
 /\Kpm1ar1':=HK(Rar1pm1.Rpm1ar1.Sar1pm1')
 /\Kpm1ac1':=HK(Rac1pm1.Rpm1ac1.Sac1pm1')
 /\witness(PM1,AR1,pm1_ar1_hpm1ar1,Hpm1ar1')
 /\witness(PM1,AC1,pm1_ac1_hpm1ac1,Hpm1ac1')
 /\SND({AR1.Hpm1ar1'}_inv(PKpm1).
 {AC1.Hpm1ac1'}_inv(PKpm1)) 
9. State=9/\RCV({AR1.Uar1'.Iar1'}_Kpm1ar1'.
 {AC1.Uac1'.Iac1'}_Kpm1ac1')
 =|>State':= 12
 /\RUar1':=new()/\RIar1':=new()
 /\RUac1':=new()/\RIac1':=new()
 /\witness(PM1,AR1,pm1_ar1_rpm1ar1,RUac1')
 /\witness(PM1,AC1,pm1_ac1_rpm1ac1,RUar1')
 /\SND({AR1.RUac1'}_Kpm1ar1'.
 {AC1.RUar1}_Kpm1ac1')
end role
%---------------------------------------------------------------------------------------------------------------
role ac1 (AR1,AC1,PM1:agent, 
  HH:hash_func,HK:hash_func,
  SNDAR,RCVAR,SNDPM,RCVPM:channel(dy))
played_by AC1
def=
local  
 Rar1pm1,Sar1pm1,Rac1pm1,Sac1pm1:text,  
 Rpm1ar1,Rpm1ac1:text,  
 Hpm1ar1,Hpm1ac1:text, 
 Uar1,Iar1,Uac1,Iac1:text, 
 RUar1,RIar1,RUac1,RIac1:text, 
 Kpm1ar1,Kpm1ac1:symmetric_key,  
 PKpm1:public_key,
 State:nat 
const 
 pm1_ar1_hpm1ar1,pm1_ac1_hpm1ac1,
 pm1_ar1_rpm1ar1,pm1_ac1_rpm1ac1
 :protocol_id
init  
 State := 2  
transition  
2. State=2/\RCVAR(AR1.Rar1pm1') 
 =|>State':=5/\ Rac1pm1':=new()
 /\SNDPM(AR1.Rar1pm1'.AC1.Rac1pm1') 
5. State=2/\RCVPM(AR1.Rpm1ar1'.AC1.Rpm1ac1'.PKpm1') 
 =|>State':= 8/\SNDAR(AR1.Rpm1ar1'.PKpm1') 
8. State=8/\RCVAR({AR1.Sar1pm1'}_PKpm1)
 =|>State':= 11/\ Sac1pm1':=new() /\SNDPM({AR1.Sar1pm1'}_PKpm1.{AC1.Sac1pm1'}_PKpm1) 
11.State=11/\RCVPM({AR1.Hpm1ar1'}_inv(PKpm1).{AC1.Hpm1ac1'}_inv(PKpm1))/\Hpm1ac1'=HH(Rac1pm1.Rpm1ac1.Sac1pm1)
 =|>State':=14
 /\Kpm1ac1':= HK(Rac1pm1.Rpm1ac1.Sac1pm1)
 /\request(AC1,PM1,pm1_ac1_hpm1ac1,Hpm1ac1')
 
 /\secret(Hpm1ac1',sect_2,{AC1,PM1})
 
 /\SNDAR({AR1.Hpm1ar1'}_inv(PKpm1)) 
14.State=14/\RCVAR({AR1.Uar1'.Iar1'}_Kpm1ar1')
 =|>State':= 17
 /\Uac1':=new()/\Iac1':=new()
 /\SNDPM({AR1.Uar1'.Iar1'}_Kpm1ar1'.
 {AC1.Uac1'.Iac1'}_Kpm1ac1')
17.State= 17/\RCVPM({AR1.RUac1'}_Kpm1ar1'.
 {AC1.RUar1}_Kpm1ac1')
 =|>State':= 20
 /\request(AC1,PM1,pm1_ac1_rpm1ac1,RUar1')
 /\SNDAR({AR1.RUac1'}_Kpm1ar1')
end role
%---------------------------------------------------------------------------------------------------------------
role ar1 (AR1,AC1,PM1:agent, 
  HH:hash_func,HK:hash_func,
  SND,RCV:channel(dy))
played_by AR1
def=
local  
 Rar1pm1,Sar1pm1,Rac1pm1,Sac1pm1:text,  
 Rpm1ar1,Rpm1ac1:text,  
 Hpm1ar1,Hpm1ac1:text, 
 Uar1,Iar1,Uac1,Iac1:text, 
 RUar1,RIar1,RUac1,RIac1:text, 
 Kpm1ar1,Kpm1ac1:symmetric_key,  
 PKpm1:public_key,
 State:nat 
const 
 pm1_ar1_hpm1ar1,pm1_ac1_hpm1ac1,
 pm1_ar1_rpm1ar1,pm1_ac1_rpm1ac1
 :protocol_id
init  
 State := 1  
transition  
1. State=1/\RCV(start) 
 =|>State':=4/\ Rar1pm1':=new()/\SND(AR1.Rar1pm1') 
4. State=4/\RCV(AR1.Rpm1ar1'.PKpm1')
 =|>State':= 7/\ Sar1pm1':=new()/\SND({AR1.Sar1pm1'}_PKpm1) 
7. State=7/\RCV({AR1.Hpm1ar1'}_inv(PKpm1))
    /\Hpm1ar1'=HH(Rar1pm1.Rpm1ar1.Sar1pm1)
 =|>State':= 10
 /\Kpm1ar1':= HK(Rar1pm1.Rpm1ar1.Sar1pm1)
 /\request(AR1,PM1,pm1_ar1_hpm1ar1,Hpm1ar1')
 
 /\secret(Hpm1ar1',sect_1,{AR1,PM1})
 
 /\Uar1':=new()/\Iar1':=new()
 /\SND({AR1.Uar1'.Iar1'}_Kpm1ar1') 
10.State=10/\RCV({AR1.RUac1'}_Kpm1ar1')
 =|>State':=13
 /\request(AR1,PM1,pm1_ar1_rpm1ar1,RUac1')
end role
%---------------------------------------------------------------------------------------------------------------
role session(AR1,AC1,PM1:agent, 
  HH:hash_func,HK:hash_func)
def=
local 
S_AR1AC1,R_AR1AC1,
S_AC1AR1,R_AC1AR1,
S_AC1PM1,R_AC1PM1:channel (dy)
composition
ar1 (AR1,AC1,PM1, HH,HK,S_AR1AC1,R_AR1AC1)/\ 
ac1 (AR1,AC1,PM1, HH,HK,S_AC1AR1,R_AC1AR1,S_AC1PM1,R_AC1PM1)/\ 
pm1 (AR1,AC1,PM1, HH,HK,S_AC1PM1,R_AC1PM1)
end role
%---------------------------------------------------------------------------------------------------------------
role environment()
def=
const  
 pm1_ar1_hpm1ar1,pm1_ac1_hpm1ac1,
 pm1_ar1_rpm1ar1,pm1_ac1_rpm1ac1,
 sect_1,sect_2
 :protocol_id,
 r1,c1,m1:agent,
 hh,hk:hash_func
intruder_knowledge = {r1,c1,m1,hh,hk}
composition
session(r1,c1,m1,hh,hk)/\ 
session(i,c1,m1,hh,hk)/\ session(r1,i,m1,hh,hk)
end role
%---------------------------------------------------------------------------------------------------------------
goal
secrecy_of sect_1, sect_2
authentication_on pm1_ar1_hpm1ar1
authentication_on pm1_ac1_hpm1ac1
authentication_on pm1_ar1_rpm1ar1
authentication_on pm1_ac1_rpm1ac1
end goal
%---------------------------------------------------------------------------------------------------------------
environment()